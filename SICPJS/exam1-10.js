function A(x, y) {
    return y === 0
    ? 0
    : x === 0
    ? 2 * y
    : y === 1
    ? 2
    : A(x - 1, A(x, y - 1));
}

function f(n) {
    return A(0, n);
}
/*
 * f(0) = 0
 * f(1) = 2
 * f(2) = 4
 * f(3) = 6
 * f(n) = 2n
 */

function g(n) {
    return A(1, n);
}
/*
 * g(0) = 0
 * g(1) = 2
 * g(2) = A(0, A(1, 1)
 * = A(0, 2)
 * = 4
 * g(3) = A(0, A(1, 2)
 * = A(0, A(0, A(1, 1)
 * = A(0, A(0, 2))
 * = A(0, 4)
 * = 8
 * g(n) = 2^n
 */

function h(n) {
    return A(2, n);
}
/*
 * h(0) = 0
 * h(1) = 2
 * h(2) = A(1, A(2, 1))
 * = A(1, 2)
 * = A(0, A(1, 1))
 * = A(0, 2)
 * = 4
 * h(3) = A(1, A(2, 2))
 * = A(1, A(1, A(2, 1)))
 * = A(1, A(1, 2))
 * = A(1, A(1, A(0, A(1, 1))))
 * = A(1, A(1, A(0, 2)))
 * = A(1, A(1, 4))
 * = A(1, A(0, A(1, 3)))
 * = A(1, A(0, A(0, A(1, 2))))
 * = A(1, A(0, A(0, A(0, A(1, 2)))))
 * = A(1, A(0, A(0, A(0, A(0, A(1, 2))))))
 * = A(1, A(0, A(0, A(0, A(0, A(1, 2))))))
 * = A(1, A(0, A(0, A(0, A(0, A(0, A(1, 1)))))))
 * = A(1, A(0, A(0, A(0, A(0, A(0, 2)))))))
 * = A(1, A(0, A(0, A(0, A(0, 4))))))
 * = A(1, A(0, A(0, A(0, 8)))))
 * = A(1, A(0, A(0, 16))))
 * = A(1, A(0, 32)))
 * = A(1, 64))
 * = 2^64
 * = 16^3
 * h(n) = 16^n
 */
function k(n) {
    return 5 * n * n;
}

console.log(A(1, 10)); // 1024
console.log(A(2, 4)); // 65536
console.log(A(3, 3)); // 65536
